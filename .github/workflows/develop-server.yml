name: QA Scales UX Server CI

on:
  push:
      branches: [integration-tests]
  # allows you to manually execute this pipeline from the Actions tab.
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: satyrn-ux-local-test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_HOST: localhost
      DB_PORT: 5432
      TEST_DB_NAME: satyrn-ux-local-test
      DB_DIALECT: postgres
      DB_SSL: false
      STAGE: local
      JWT_SECRET: too_many_secrets
      JWT_EXP: 1d
      JWT_EXP_LONG: 60d
      UX_SERVER_PORT: 8080
      RATE_LIMIT_MAX_REQUESTS: 1000
      RATE_LIMIT_TIME_WINDOW_MS: 900000
      SEED_ADMIN_PASSWORD: admin
      CORE_API_KEY: api-key
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "20.x"
      - name: Install dependencies
        working-directory: ./server
        run: npm ci
      - name: Build
        working-directory: ./server
        run: npm run build
      - name: Run tests
        working-directory: ./server
        run: npm run test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: NPM install
        working-directory: ./server
        run: npm i
      - name: Run tests
        working-directory: ./server
        run: npm test
      - name: Build image
        working-directory: ./server
        run: docker build -t registry.digitalocean.com/scales-okn/scales-ux-server:latest .
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITAL_OCEAN_ACCESS_TOKEN }}
      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 600
      - name: Push image to DO Container Registry
        run: docker push registry.digitalocean.com/scales-okn/scales-ux-server:latest
      - name: Create the .ssh directory
        run: mkdir ~/.ssh && chmod 700 ~/.ssh
      - name: Install private key for droplet
        run: echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
      - name: Add droplet host to known hosts
        run: echo "${{ secrets.SSH_KNOWN_QA_HOSTS }}" > ~/.ssh/known_hosts
      - name: Log in to Droplet and pull updated image
        run: ssh root@${{ secrets.QA_HOST }} "/bin/bash -c 'cd scales-satyrn && docker compose pull ux && docker compose stop ux && docker-compose up -d --no-deps ux && docker image prune -f'"
